# математические операции, возвращающие логические значения:
# (операции сравнения)
from home_work.dz_7_2 import concat_names

a = 10
b = 5

# '==' - два знака равно подряд - это логическое равенство.
# Эта операция сравнивает 2 переменные слева и справа
# и возвращает True, если переменные равны и False, если не равны

print(f"a == b = {a == b}")
print(f"a == a = {a == a}")

# '!=' - символ "!" + символ "=" - логическое неравенство
# Эта операция сравнивает 2 переменные слева и справа
# и возвращает False, если переменные равны и True, если не равны

print(f"a != b = {a != b}")
print(f"a != a = {a != a}")

# Операции сравнения.
# Утверждение "a > b" вернет True, если переменная а строго больше
# (не равна), чем переменная b.
# И наоборот, выражение "a < b" вернет False, если переменная а строго больше
# (не равна), чем переменная b.

c = 5

print(f"a > b = {a > b}")
print(f"b > a = {b > a}")
print(f"a < b = {a < b}")
print(f"b < a = {b < a}")
print(f"a >= b = {a >= b}")

print(f"b >= a = {b >= a}")
print(f"a <= b = {a <= b}")
print(f"b <= a = {b <= a}")
print(f"c >= b = {c >= b}")
print(f"c <= b = {c <= b}")

# boolean - название для логического типа данных

var_true = True
var_false = False

# математические операции, возвращающие логические значения:
# (операции сравнения)

a = 10
b = 5

print(f"a = {a}\nb = {b}")

# '==' - два знака равно подряд - это логическое равенство.
# Эта операция сравнивает 2 переменные слева и справа
# и возвращает True, если переменные равны и False, если не равны

print(f"a == b = {a == b}")
print(f"a == a = {a == a}")

# '!=' - символ "!" + символ "=" - логическое неравенство
# Эта операция сравнивает 2 переменные слева и справа
# и возвращает False, если переменные равны и True, если не равны

print(f"a != b = {a != b}")
print(f"a != a = {a != a}")

# Операции сравнения.
# Утверждение "a > b" вернет True, если переменная а строго больше
# (не равна), чем переменная b.
# И наоборот, выражение "a < b" вернет False, если переменная а строго больше
# (не равна), чем переменная b.

c = 5  # b = 5

print(f"a > b = {a > b}")
print(f"b > a = {b > a}")
print(f"a < b = {a < b}")
print(f"b < a = {b < a}")
print(f"c > b = {c > b}")
print(f"c < b = {c < b}")

# Логические "больше или равно" и "меньше или равно"
# обозначаются, как символ "<" или ">" и затем "=", пишутся подряд, без пробела.
# В отличие от строгого сравнения "<" или ">", операции <= и >= вернут True,
# если сравниваемы значения равны

print(f"a >= b = {a >= b}")
print(f"b >= a = {b >= a}")
print(f"a <= b = {a <= b}")
print(f"b <= a = {b <= a}")
print(f"c >= b = {c >= b}")
print(f"c <= b = {c <= b}")

# сравнение строк

str_1 = "ABC"
str_2 = "abc"
str_3 = "ABC"

# == !=

# простое сравнение строк на равенство проверяет,
# что две строки абсолютно одинаковые, не включают различные другие символы
# и обязательно все символы в одинаковом регистре

print(f"{str_1} == {str_2} = {str_1 == str_2}")
print(f"{str_1} == {str_3} = {str_1 == str_3}")

# сравнение строк, игнорируя регистр:

print(f"ABC.lower() == abc.lower() = {str_1.lower() == str_2.lower()}")

# простое сравнение строк на НЕ равенство проверяет,
# что две строки не одинаковые, даже если отличается
# хотя бы один символ или регистр, то операция "!=" вернет True

print(f"{str_1} != {str_2} = {str_1 != str_2}")
print(f"{str_1} != {str_3} = {str_1 != str_3}")

# сравнение строк, игнорируя регистр:
print(f"ABC.lower() != abc.lower() = {str_1.lower() != str_2.lower()}")

# сравнение строк по алфавиту, меньше та строка,
# что по алфавиту стоит раньше
# проверить самим "AAA" и "aaa", что раньше и почему? ответ см ASCII

print("aaa" < "abc")

# как работает функция "in" в python

str_4 = "Python"
str_5 = "I love Python"

# str_4 in str_5, проверяет, что в строке str_5 есть точная последовательность
# символов (полное совпадение) с str_4. То есть, мы проверяем, что слово str_4, есть в str_5
# если есть, то получим True. (чувствителен к регистру)

print(f"\"{str_4}\" in \"{str_5}\" = {str_4 in str_5}")

# эта строка нужна ТОЛЬКО для демонстрации, что любая операция,
# которая возвращает True или False, может быть записана в переменную:

var_boolean = str_4 in str_5
print(f"\"{str_4}\" in \"{str_5}\" = {var_boolean}")

# другие примеры:

my_boolean = 4 > 10
sdfgdgh = "casdas" > "dfsdf"


