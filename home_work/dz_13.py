# 0. Самостоятельная работа. Даны два списка строк – ["A", "B", "C", "D", "E"] и ["D", "E", "F", "G"].
# Напишите функцию, которая возвращает третий список, содержащий все элементы обоих списков.
# Ожидаемый результат - ["A", "B", "C", "D", "E", "D", "E", "F", "G"].


def combining_lists():  # Определяем функцию.
    list_one = ["A", "B", "C", "D", "E"]  # Первый список строк.
    list_two = ["D", "E", "F", "G"]  # Второй список строк.
    for list_combining in list_two:  # Обходим элементы второго списка
        list_one.append(list_combining)  # Добавляем и в конец первого списка.
    return list_one  # Возвращаем результат


print(combining_lists())  # Вызываем функцию и выводим список.


# Ну или по проще:

def merge_lists(list1, list2):  # Определяем функцию.
    merged_list = list1 + list2  # Объединяем списки, используя оператор +
    return merged_list  # Возвращаем результат


list1 = ["A", "B", "C", "D", "E"]  # Первый список строк.
list2 = ["D", "E", "F", "G"]  # Второй список строк.
result = merge_lists(list1, list2)  # Вызываем функцию и передаем аргументы.
print(result)  # Выведет ["A", "B", "C", "D", "E", "D", "E", "F", "G"]


# 1. Создайте список, который содержит несколько названий фруктов.
# Выведите его на экран так, чтобы каждое название выводилось с новой строки.


def print_fruits_list():  # Определяем функцию.
    fruits = ["яблоко", "банан", "апельсин", "манго", "киви"]  # Создаем список фруктов
    for fruit in fruits:  # Перебираем список
        print(fruit)  # Выводим каждый фрукт на новой строке


# Вызов функции
print_fruits_list()


# 2. Создайте список, который состоит из нескольких положительных целых чисел.
# Напишите программу, которая определяет и выводит на экран максимальное из чётных чисел списка.

def find_max_even(lists):  # Определяем функцию.
    even_numbers = [num for num in lists if num % 2 == 0]  # Создаем список только из четных чисел
    if not even_numbers:  # Если четных чисел нет
        print("В списке нет четных чисел.")  # Выводим сообщение об этом
    else:  # Если четные числа есть
        max_even = max(even_numbers)  # Находим максимальное четное число
        print(f"Максимальное четное число: {max_even}")  # Выводим максимальное число


# Примеры использования:
numbers = [1, 3, 5, 8, 2, 10, 4, 7]
find_max_even(numbers)  # Выведет: Максимальное четное число: 10


# numbers2 = [1, 3, 5, 7]
# find_max_even(numbers2) # Выведет: В списке нет четных чисел.


# 3. Напишите функцию, которая принимает на вход список чисел,
# находит в нём максимальное и минимальное значения, и меняет их местами.

def swap_min_max(numbers):  # Определяем функцию.
    if not numbers:  # Если список пустой
        return  # Ничего не делаем

    min_index = numbers.index(min(numbers))  # Индекс минимального значения
    max_index = numbers.index(max(numbers))  # Индекс максимального значения

    numbers[min_index], numbers[max_index] = numbers[max_index], numbers[min_index]  # Меняем значения местами


# Примеры использования:
numbers = [3, 1, 4, 1, 5, 9, 2, 6]
swap_min_max(numbers)
print(numbers)  # Выведет: [3, 9, 4, 1, 5, 1, 2, 6]

# numbers2 = [5]
# swap_min_max(numbers2)
# print(numbers2) # Выведет [5]

# numbers3 = []
# swap_min_max(numbers3)
# print(numbers3) # Выведет []
