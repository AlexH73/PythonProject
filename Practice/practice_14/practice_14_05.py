# Задача 5: Упрощённый «Морской Бой» (5×5)
# 1. Поле — двумерный список (5×5), где каждая клетка может быть:
#    - `None` — пустая и не подбитая
#    - `'S'` — корабль (неподбитая часть)
#    - `'X'` — подбитая часть корабля
#    - `'O'` — подбитая пустая клетка (промах)
# 2. Расстановка кораблей:
#    - Происходит случайно: программа случайно выбирает ячейки для своего 1–2 «однопалубных» кораблей (или нужного количества).
#    - Аналогично расставляется корабль(и) игрока — тоже случайно (или зашито в коде).
# 3. Игровой процесс:
#    - Игра идёт пошагово:
#      - Игрок вводит координаты (x, y) для «выстрела» по полю компьютера.
#        - Если там `S`, меняем на `'X'` (попадание). Если было `None`, меняем на `'O'` (промах).
#        - Если координаты некорректны — повтор ввода.
#      - Программа «ходит» случайно, выбирая нестрелянную клетку на поле игрока. Аналогично отметки `X`/`O`.
#    - После каждого выстрела проверяется, остались ли символы `'S'` у соперника. Если нет — соперник проиграл.
# 4. Окончание:
#    - Игра продолжается, пока у кого-то не будут уничтожены все корабли (`'S'` больше нет).
#    - Объявляется победитель (игрок или программа).
# 5. Отображение:
#    - Можно после каждого хода печатать поле игрока (целиком) и поле компьютера (с теми же символами, но `'S'` скрывать до попадания).
#    - Хранить поля: `player_field` и `computer_field`, оба размером 5×5.
import random

# Создает игровое поле размером 5x5, заполненное значениями None
def create_field():
    return [[None for _ in range(5)] for _ in range(5)]

# Расставляет заданное количество кораблей на поле случайным образом
def place_ships(field, num_ships):
    placed_ships = 0
    while placed_ships < num_ships:
        x, y = random.randint(0, 4), random.randint(0, 4)
        if field[x][y] is None:  # Проверяем, что клетка пустая
            field[x][y] = 'S'  # Размещаем корабль
            placed_ships += 1

# Печатает текущее состояние поля
# Если hide_ships=True, скрывает расположение кораблей (заменяя их точками)
def print_field(field, hide_ships=False):
    # Печатаем заголовок для оси X
    print("X->0 1 2 3 4")
    print("Y -----------")
    for i, row in enumerate(field):
        # Нумерация строки для оси Y
        print(f"{i} |", end=" ")
        for cell in row:
            if hide_ships and cell == 'S':
                print('.', end=' ')
            else:
                print(cell if cell else '.', end=' ')
        print()

# Получает координаты выстрела от игрока
# Проверяет корректность ввода и возвращает координаты

def get_player_shot():
    while True:
        try:
            coords = input("Введите координаты для выстрела (x y): ").split()
            if len(coords) != 2:  # Проверяем, что введены ровно два значения
                raise ValueError
            x, y = map(int, coords)  # Преобразуем введенные значения в числа
            if 0 <= x < 5 and 0 <= y < 5:  # Проверяем, что координаты в пределах поля
                return x, y
            else:
                raise ValueError
        except ValueError:
            print("Некорректный ввод. Попробуйте снова.")

# Генерирует случайный выстрел компьютера
# Убедившись, что клетка еще не была атакована
def get_computer_shot(player_field):
    while True:
        x, y = random.randint(0, 4), random.randint(0, 4)
        if player_field[x][y] not in ('X', 'O'):  # Проверяем, что клетка еще не обстреляна
            return x, y

# Проверяет, остались ли на поле неповрежденные корабли ('S')
def check_winner(field):
    return not any('S' in row for row in field)

# Основная игровая логика
def main():
    print("Добро пожаловать в Морской Бой!")

    # Создаем поля
    player_field = create_field()  # Поле игрока
    computer_field = create_field()  # Поле компьютера

    # Расставляем корабли
    place_ships(player_field, 2)  # Размещаем два корабля на поле игрока
    place_ships(computer_field, 2)  # Размещаем два корабля на поле компьютера

    while True:
        # Отображаем поле игрока и компьютера
        print("\nВаше поле:")
        print_field(player_field)

        print("\nПоле компьютера:")
        print_field(computer_field, hide_ships=True)

        # Ход игрока
        print("\nВаш ход:")
        x, y = get_player_shot()
        if computer_field[x][y] == 'S':  # Если игрок попал в корабль
            computer_field[x][y] = 'X'
            print("Попадание!")
        elif computer_field[x][y] is None:  # Если игрок промахнулся
            computer_field[x][y] = 'O'
            print("Мимо!")
        else:
            print("Вы уже стреляли сюда. Пропуск хода.")

        # Проверяем, победил ли игрок
        if check_winner(computer_field):
            print("Поздравляем, вы победили!")
            break

        # Ход компьютера
        print("\nХод компьютера:")
        x, y = get_computer_shot(player_field)
        if player_field[x][y] == 'S':  # Если компьютер попал в корабль
            player_field[x][y] = 'X'
            print(f"Компьютер попал в клетку ({x}, {y})!")
        elif player_field[x][y] is None:  # Если компьютер промахнулся
            player_field[x][y] = 'O'
            print(f"Компьютер промахнулся в клетке ({x}, {y}).")

        # Проверяем, победил ли компьютер
        if check_winner(player_field):
            print("К сожалению, вы проиграли. Компьютер победил.")
            break

if __name__ == "__main__":
    main()
